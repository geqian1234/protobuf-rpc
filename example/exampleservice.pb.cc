// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example/exampleservice.proto

#include "example/exampleservice.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace example {
        template <typename>
PROTOBUF_CONSTEXPR OperaResF::OperaResF(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.c_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OperaResFDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperaResFDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperaResFDefaultTypeInternal() {}
  union {
    OperaResF _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperaResFDefaultTypeInternal _OperaResF_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OperaRes::OperaRes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.c_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OperaResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperaResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperaResDefaultTypeInternal() {}
  union {
    OperaRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperaResDefaultTypeInternal _OperaRes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OperaReqF::OperaReqF(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.a_)*/ 0,
      /*decltype(_impl_.b_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OperaReqFDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperaReqFDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperaReqFDefaultTypeInternal() {}
  union {
    OperaReqF _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperaReqFDefaultTypeInternal _OperaReqF_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OperaReq::OperaReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.a_)*/ ::int64_t{0},
      /*decltype(_impl_.b_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OperaReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperaReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperaReqDefaultTypeInternal() {}
  union {
    OperaReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperaReqDefaultTypeInternal _OperaReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR HelloResMessage::HelloResMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.response_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct HelloResMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloResMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloResMessageDefaultTypeInternal() {}
  union {
    HelloResMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloResMessageDefaultTypeInternal _HelloResMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR HelloReqMessage::HelloReqMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.clientname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct HelloReqMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloReqMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloReqMessageDefaultTypeInternal() {}
  union {
    HelloReqMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloReqMessageDefaultTypeInternal _HelloReqMessage_default_instance_;
}  // namespace example
static ::_pb::Metadata file_level_metadata_example_2fexampleservice_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_example_2fexampleservice_2eproto = nullptr;
static const ::_pb::ServiceDescriptor*
    file_level_service_descriptors_example_2fexampleservice_2eproto[3];
const ::uint32_t TableStruct_example_2fexampleservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::example::HelloReqMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::example::HelloReqMessage, _impl_.clientname_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::example::HelloResMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::example::HelloResMessage, _impl_.response_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::example::OperaReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::example::OperaReq, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::example::OperaReq, _impl_.b_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::example::OperaRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::example::OperaRes, _impl_.c_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::example::OperaReqF, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::example::OperaReqF, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::example::OperaReqF, _impl_.b_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::example::OperaResF, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::example::OperaResF, _impl_.c_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::example::HelloReqMessage)},
        {9, -1, -1, sizeof(::example::HelloResMessage)},
        {18, -1, -1, sizeof(::example::OperaReq)},
        {28, -1, -1, sizeof(::example::OperaRes)},
        {37, -1, -1, sizeof(::example::OperaReqF)},
        {47, -1, -1, sizeof(::example::OperaResF)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::example::_HelloReqMessage_default_instance_._instance,
    &::example::_HelloResMessage_default_instance_._instance,
    &::example::_OperaReq_default_instance_._instance,
    &::example::_OperaRes_default_instance_._instance,
    &::example::_OperaReqF_default_instance_._instance,
    &::example::_OperaResF_default_instance_._instance,
};
const char descriptor_table_protodef_example_2fexampleservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\034example/exampleservice.proto\022\007example\""
    "%\n\017HelloReqMessage\022\022\n\nClientName\030\001 \001(\014\"#"
    "\n\017HelloResMessage\022\020\n\010Response\030\001 \001(\014\" \n\010O"
    "peraReq\022\t\n\001a\030\001 \001(\003\022\t\n\001b\030\002 \001(\003\"\025\n\010OperaRe"
    "s\022\t\n\001c\030\001 \001(\003\"!\n\tOperaReqF\022\t\n\001a\030\001 \001(\002\022\t\n\001"
    "b\030\002 \001(\002\"\026\n\tOperaResF\022\t\n\001c\030\001 \001(\0022K\n\014Hello"
    "Service\022;\n\005Hello\022\030.example.HelloReqMessa"
    "ge\032\030.example.HelloResMessage2i\n\rIntCalSe"
    "rvice\022+\n\003Add\022\021.example.OperaReq\032\021.exampl"
    "e.OperaRes\022+\n\003Sub\022\021.example.OperaReq\032\021.e"
    "xample.OperaRes2o\n\017FloatCalService\022-\n\003Mu"
    "l\022\022.example.OperaReqF\032\022.example.OperaRes"
    "F\022-\n\003Div\022\022.example.OperaReqF\032\022.example.O"
    "peraResFB\003\200\001\001b\006proto3"
};
static ::absl::once_flag descriptor_table_example_2fexampleservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_example_2fexampleservice_2eproto = {
    false,
    false,
    541,
    descriptor_table_protodef_example_2fexampleservice_2eproto,
    "example/exampleservice.proto",
    &descriptor_table_example_2fexampleservice_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_example_2fexampleservice_2eproto::offsets,
    file_level_metadata_example_2fexampleservice_2eproto,
    file_level_enum_descriptors_example_2fexampleservice_2eproto,
    file_level_service_descriptors_example_2fexampleservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_example_2fexampleservice_2eproto_getter() {
  return &descriptor_table_example_2fexampleservice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_example_2fexampleservice_2eproto(&descriptor_table_example_2fexampleservice_2eproto);
namespace example {
// ===================================================================

class HelloReqMessage::_Internal {
 public:
};

HelloReqMessage::HelloReqMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:example.HelloReqMessage)
}
HelloReqMessage::HelloReqMessage(const HelloReqMessage& from) : ::google::protobuf::Message() {
  HelloReqMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.clientname_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.clientname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.clientname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_clientname().empty()) {
    _this->_impl_.clientname_.Set(from._internal_clientname(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:example.HelloReqMessage)
}
inline void HelloReqMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.clientname_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.clientname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.clientname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
HelloReqMessage::~HelloReqMessage() {
  // @@protoc_insertion_point(destructor:example.HelloReqMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HelloReqMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.clientname_.Destroy();
}
void HelloReqMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void HelloReqMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:example.HelloReqMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clientname_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HelloReqMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HelloReqMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HelloReqMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes ClientName = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HelloReqMessage, _impl_.clientname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes ClientName = 1;
    {PROTOBUF_FIELD_OFFSET(HelloReqMessage, _impl_.clientname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* HelloReqMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.HelloReqMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes ClientName = 1;
  if (!this->_internal_clientname().empty()) {
    const std::string& _s = this->_internal_clientname();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.HelloReqMessage)
  return target;
}

::size_t HelloReqMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.HelloReqMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes ClientName = 1;
  if (!this->_internal_clientname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_clientname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HelloReqMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    HelloReqMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*HelloReqMessage::GetClassData() const { return &_class_data_; }


void HelloReqMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HelloReqMessage*>(&to_msg);
  auto& from = static_cast<const HelloReqMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:example.HelloReqMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_clientname().empty()) {
    _this->_internal_set_clientname(from._internal_clientname());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HelloReqMessage::CopyFrom(const HelloReqMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.HelloReqMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HelloReqMessage::IsInitialized() const {
  return true;
}

void HelloReqMessage::InternalSwap(HelloReqMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientname_, lhs_arena,
                                       &other->_impl_.clientname_, rhs_arena);
}

::google::protobuf::Metadata HelloReqMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_example_2fexampleservice_2eproto_getter, &descriptor_table_example_2fexampleservice_2eproto_once,
      file_level_metadata_example_2fexampleservice_2eproto[0]);
}
// ===================================================================

class HelloResMessage::_Internal {
 public:
};

HelloResMessage::HelloResMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:example.HelloResMessage)
}
HelloResMessage::HelloResMessage(const HelloResMessage& from) : ::google::protobuf::Message() {
  HelloResMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.response_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.response_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.response_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response().empty()) {
    _this->_impl_.response_.Set(from._internal_response(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:example.HelloResMessage)
}
inline void HelloResMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.response_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.response_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.response_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
HelloResMessage::~HelloResMessage() {
  // @@protoc_insertion_point(destructor:example.HelloResMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HelloResMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.response_.Destroy();
}
void HelloResMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void HelloResMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:example.HelloResMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HelloResMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HelloResMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HelloResMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes Response = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HelloResMessage, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes Response = 1;
    {PROTOBUF_FIELD_OFFSET(HelloResMessage, _impl_.response_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* HelloResMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.HelloResMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes Response = 1;
  if (!this->_internal_response().empty()) {
    const std::string& _s = this->_internal_response();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.HelloResMessage)
  return target;
}

::size_t HelloResMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.HelloResMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Response = 1;
  if (!this->_internal_response().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HelloResMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    HelloResMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*HelloResMessage::GetClassData() const { return &_class_data_; }


void HelloResMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HelloResMessage*>(&to_msg);
  auto& from = static_cast<const HelloResMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:example.HelloResMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_response().empty()) {
    _this->_internal_set_response(from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HelloResMessage::CopyFrom(const HelloResMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.HelloResMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HelloResMessage::IsInitialized() const {
  return true;
}

void HelloResMessage::InternalSwap(HelloResMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_, lhs_arena,
                                       &other->_impl_.response_, rhs_arena);
}

::google::protobuf::Metadata HelloResMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_example_2fexampleservice_2eproto_getter, &descriptor_table_example_2fexampleservice_2eproto_once,
      file_level_metadata_example_2fexampleservice_2eproto[1]);
}
// ===================================================================

class OperaReq::_Internal {
 public:
};

OperaReq::OperaReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:example.OperaReq)
}
OperaReq::OperaReq(const OperaReq& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:example.OperaReq)
}
inline void OperaReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.a_){::int64_t{0}},
      decltype(_impl_.b_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
OperaReq::~OperaReq() {
  // @@protoc_insertion_point(destructor:example.OperaReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperaReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void OperaReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OperaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:example.OperaReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.a_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.b_) -
      reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.b_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperaReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> OperaReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OperaReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 b = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OperaReq, _impl_.b_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OperaReq, _impl_.b_)}},
    // int64 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OperaReq, _impl_.a_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OperaReq, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 a = 1;
    {PROTOBUF_FIELD_OFFSET(OperaReq, _impl_.a_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 b = 2;
    {PROTOBUF_FIELD_OFFSET(OperaReq, _impl_.b_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* OperaReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.OperaReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 a = 1;
  if (this->_internal_a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // int64 b = 2;
  if (this->_internal_b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.OperaReq)
  return target;
}

::size_t OperaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.OperaReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 a = 1;
  if (this->_internal_a() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_a());
  }

  // int64 b = 2;
  if (this->_internal_b() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_b());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperaReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OperaReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*OperaReq::GetClassData() const { return &_class_data_; }


void OperaReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperaReq*>(&to_msg);
  auto& from = static_cast<const OperaReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:example.OperaReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_a() != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  if (from._internal_b() != 0) {
    _this->_internal_set_b(from._internal_b());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperaReq::CopyFrom(const OperaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.OperaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperaReq::IsInitialized() const {
  return true;
}

void OperaReq::InternalSwap(OperaReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperaReq, _impl_.b_)
      + sizeof(OperaReq::_impl_.b_)
      - PROTOBUF_FIELD_OFFSET(OperaReq, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::google::protobuf::Metadata OperaReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_example_2fexampleservice_2eproto_getter, &descriptor_table_example_2fexampleservice_2eproto_once,
      file_level_metadata_example_2fexampleservice_2eproto[2]);
}
// ===================================================================

class OperaRes::_Internal {
 public:
};

OperaRes::OperaRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:example.OperaRes)
}
OperaRes::OperaRes(const OperaRes& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:example.OperaRes)
}
inline void OperaRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.c_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
OperaRes::~OperaRes() {
  // @@protoc_insertion_point(destructor:example.OperaRes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperaRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void OperaRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OperaRes::Clear() {
// @@protoc_insertion_point(message_clear_start:example.OperaRes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.c_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperaRes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> OperaRes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OperaRes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 c = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OperaRes, _impl_.c_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OperaRes, _impl_.c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 c = 1;
    {PROTOBUF_FIELD_OFFSET(OperaRes, _impl_.c_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* OperaRes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.OperaRes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 c = 1;
  if (this->_internal_c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.OperaRes)
  return target;
}

::size_t OperaRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.OperaRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 c = 1;
  if (this->_internal_c() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_c());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperaRes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OperaRes::MergeImpl
};
const ::google::protobuf::Message::ClassData*OperaRes::GetClassData() const { return &_class_data_; }


void OperaRes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperaRes*>(&to_msg);
  auto& from = static_cast<const OperaRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:example.OperaRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_c() != 0) {
    _this->_internal_set_c(from._internal_c());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperaRes::CopyFrom(const OperaRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.OperaRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperaRes::IsInitialized() const {
  return true;
}

void OperaRes::InternalSwap(OperaRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.c_, other->_impl_.c_);
}

::google::protobuf::Metadata OperaRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_example_2fexampleservice_2eproto_getter, &descriptor_table_example_2fexampleservice_2eproto_once,
      file_level_metadata_example_2fexampleservice_2eproto[3]);
}
// ===================================================================

class OperaReqF::_Internal {
 public:
};

OperaReqF::OperaReqF(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:example.OperaReqF)
}
OperaReqF::OperaReqF(const OperaReqF& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:example.OperaReqF)
}
inline void OperaReqF::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.a_){0},
      decltype(_impl_.b_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
OperaReqF::~OperaReqF() {
  // @@protoc_insertion_point(destructor:example.OperaReqF)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperaReqF::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void OperaReqF::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OperaReqF::Clear() {
// @@protoc_insertion_point(message_clear_start:example.OperaReqF)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.a_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.b_) -
      reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.b_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperaReqF::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> OperaReqF::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OperaReqF_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float b = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(OperaReqF, _impl_.b_)}},
    // float a = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(OperaReqF, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float a = 1;
    {PROTOBUF_FIELD_OFFSET(OperaReqF, _impl_.a_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float b = 2;
    {PROTOBUF_FIELD_OFFSET(OperaReqF, _impl_.b_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* OperaReqF::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.OperaReqF)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float a = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_a = this->_internal_a();
  ::uint32_t raw_a;
  memcpy(&raw_a, &tmp_a, sizeof(tmp_a));
  if (raw_a != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_a(), target);
  }

  // float b = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_b = this->_internal_b();
  ::uint32_t raw_b;
  memcpy(&raw_b, &tmp_b, sizeof(tmp_b));
  if (raw_b != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.OperaReqF)
  return target;
}

::size_t OperaReqF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.OperaReqF)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float a = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_a = this->_internal_a();
  ::uint32_t raw_a;
  memcpy(&raw_a, &tmp_a, sizeof(tmp_a));
  if (raw_a != 0) {
    total_size += 5;
  }

  // float b = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_b = this->_internal_b();
  ::uint32_t raw_b;
  memcpy(&raw_b, &tmp_b, sizeof(tmp_b));
  if (raw_b != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperaReqF::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OperaReqF::MergeImpl
};
const ::google::protobuf::Message::ClassData*OperaReqF::GetClassData() const { return &_class_data_; }


void OperaReqF::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperaReqF*>(&to_msg);
  auto& from = static_cast<const OperaReqF&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:example.OperaReqF)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_a = from._internal_a();
  ::uint32_t raw_a;
  memcpy(&raw_a, &tmp_a, sizeof(tmp_a));
  if (raw_a != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_b = from._internal_b();
  ::uint32_t raw_b;
  memcpy(&raw_b, &tmp_b, sizeof(tmp_b));
  if (raw_b != 0) {
    _this->_internal_set_b(from._internal_b());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperaReqF::CopyFrom(const OperaReqF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.OperaReqF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperaReqF::IsInitialized() const {
  return true;
}

void OperaReqF::InternalSwap(OperaReqF* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperaReqF, _impl_.b_)
      + sizeof(OperaReqF::_impl_.b_)
      - PROTOBUF_FIELD_OFFSET(OperaReqF, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::google::protobuf::Metadata OperaReqF::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_example_2fexampleservice_2eproto_getter, &descriptor_table_example_2fexampleservice_2eproto_once,
      file_level_metadata_example_2fexampleservice_2eproto[4]);
}
// ===================================================================

class OperaResF::_Internal {
 public:
};

OperaResF::OperaResF(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:example.OperaResF)
}
OperaResF::OperaResF(const OperaResF& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:example.OperaResF)
}
inline void OperaResF::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.c_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
OperaResF::~OperaResF() {
  // @@protoc_insertion_point(destructor:example.OperaResF)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperaResF::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void OperaResF::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OperaResF::Clear() {
// @@protoc_insertion_point(message_clear_start:example.OperaResF)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.c_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperaResF::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> OperaResF::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OperaResF_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float c = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(OperaResF, _impl_.c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float c = 1;
    {PROTOBUF_FIELD_OFFSET(OperaResF, _impl_.c_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* OperaResF::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.OperaResF)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float c = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_c = this->_internal_c();
  ::uint32_t raw_c;
  memcpy(&raw_c, &tmp_c, sizeof(tmp_c));
  if (raw_c != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.OperaResF)
  return target;
}

::size_t OperaResF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.OperaResF)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float c = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_c = this->_internal_c();
  ::uint32_t raw_c;
  memcpy(&raw_c, &tmp_c, sizeof(tmp_c));
  if (raw_c != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperaResF::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OperaResF::MergeImpl
};
const ::google::protobuf::Message::ClassData*OperaResF::GetClassData() const { return &_class_data_; }


void OperaResF::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperaResF*>(&to_msg);
  auto& from = static_cast<const OperaResF&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:example.OperaResF)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_c = from._internal_c();
  ::uint32_t raw_c;
  memcpy(&raw_c, &tmp_c, sizeof(tmp_c));
  if (raw_c != 0) {
    _this->_internal_set_c(from._internal_c());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperaResF::CopyFrom(const OperaResF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.OperaResF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperaResF::IsInitialized() const {
  return true;
}

void OperaResF::InternalSwap(OperaResF* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.c_, other->_impl_.c_);
}

::google::protobuf::Metadata OperaResF::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_example_2fexampleservice_2eproto_getter, &descriptor_table_example_2fexampleservice_2eproto_once,
      file_level_metadata_example_2fexampleservice_2eproto[5]);
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* HelloService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_example_2fexampleservice_2eproto);
  return file_level_service_descriptors_example_2fexampleservice_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* HelloService::GetDescriptor() {
  return descriptor();
}

void HelloService::Hello(::google::protobuf::RpcController* controller,
                         const ::example::HelloReqMessage*, ::example::HelloResMessage*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Hello() not implemented.");
  done->Run();
}

void HelloService::CallMethod(
    const ::google::protobuf::MethodDescriptor* method,
    ::google::protobuf::RpcController* controller,
    const ::google::protobuf::Message* request,
    ::google::protobuf::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_example_2fexampleservice_2eproto[0]);
  switch (method->index()) {
    case 0:
      Hello(controller,
             ::google::protobuf::internal::DownCast<const ::example::HelloReqMessage*>(request),
             ::google::protobuf::internal::DownCast<::example::HelloResMessage*>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& HelloService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::example::HelloReqMessage::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& HelloService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::example::HelloResMessage::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

HelloService_Stub::HelloService_Stub(::google::protobuf::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

HelloService_Stub::HelloService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

HelloService_Stub::~HelloService_Stub() {
  if (owns_channel_) delete channel_;
}

void HelloService_Stub::Hello(::google::protobuf::RpcController* controller,
                              const ::example::HelloReqMessage* request,
                              ::example::HelloResMessage* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* IntCalService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_example_2fexampleservice_2eproto);
  return file_level_service_descriptors_example_2fexampleservice_2eproto[1];
}

const ::google::protobuf::ServiceDescriptor* IntCalService::GetDescriptor() {
  return descriptor();
}

void IntCalService::Add(::google::protobuf::RpcController* controller,
                         const ::example::OperaReq*, ::example::OperaRes*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Add() not implemented.");
  done->Run();
}
void IntCalService::Sub(::google::protobuf::RpcController* controller,
                         const ::example::OperaReq*, ::example::OperaRes*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Sub() not implemented.");
  done->Run();
}

void IntCalService::CallMethod(
    const ::google::protobuf::MethodDescriptor* method,
    ::google::protobuf::RpcController* controller,
    const ::google::protobuf::Message* request,
    ::google::protobuf::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_example_2fexampleservice_2eproto[1]);
  switch (method->index()) {
    case 0:
      Add(controller,
             ::google::protobuf::internal::DownCast<const ::example::OperaReq*>(request),
             ::google::protobuf::internal::DownCast<::example::OperaRes*>(response), done);
      break;
    case 1:
      Sub(controller,
             ::google::protobuf::internal::DownCast<const ::example::OperaReq*>(request),
             ::google::protobuf::internal::DownCast<::example::OperaRes*>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& IntCalService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::example::OperaReq::default_instance();
    case 1:
      return ::example::OperaReq::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& IntCalService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::example::OperaRes::default_instance();
    case 1:
      return ::example::OperaRes::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

IntCalService_Stub::IntCalService_Stub(::google::protobuf::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

IntCalService_Stub::IntCalService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

IntCalService_Stub::~IntCalService_Stub() {
  if (owns_channel_) delete channel_;
}

void IntCalService_Stub::Add(::google::protobuf::RpcController* controller,
                              const ::example::OperaReq* request,
                              ::example::OperaRes* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void IntCalService_Stub::Sub(::google::protobuf::RpcController* controller,
                              const ::example::OperaReq* request,
                              ::example::OperaRes* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* FloatCalService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_example_2fexampleservice_2eproto);
  return file_level_service_descriptors_example_2fexampleservice_2eproto[2];
}

const ::google::protobuf::ServiceDescriptor* FloatCalService::GetDescriptor() {
  return descriptor();
}

void FloatCalService::Mul(::google::protobuf::RpcController* controller,
                         const ::example::OperaReqF*, ::example::OperaResF*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Mul() not implemented.");
  done->Run();
}
void FloatCalService::Div(::google::protobuf::RpcController* controller,
                         const ::example::OperaReqF*, ::example::OperaResF*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Div() not implemented.");
  done->Run();
}

void FloatCalService::CallMethod(
    const ::google::protobuf::MethodDescriptor* method,
    ::google::protobuf::RpcController* controller,
    const ::google::protobuf::Message* request,
    ::google::protobuf::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_example_2fexampleservice_2eproto[2]);
  switch (method->index()) {
    case 0:
      Mul(controller,
             ::google::protobuf::internal::DownCast<const ::example::OperaReqF*>(request),
             ::google::protobuf::internal::DownCast<::example::OperaResF*>(response), done);
      break;
    case 1:
      Div(controller,
             ::google::protobuf::internal::DownCast<const ::example::OperaReqF*>(request),
             ::google::protobuf::internal::DownCast<::example::OperaResF*>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& FloatCalService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::example::OperaReqF::default_instance();
    case 1:
      return ::example::OperaReqF::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& FloatCalService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::example::OperaResF::default_instance();
    case 1:
      return ::example::OperaResF::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

FloatCalService_Stub::FloatCalService_Stub(::google::protobuf::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

FloatCalService_Stub::FloatCalService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

FloatCalService_Stub::~FloatCalService_Stub() {
  if (owns_channel_) delete channel_;
}

void FloatCalService_Stub::Mul(::google::protobuf::RpcController* controller,
                              const ::example::OperaReqF* request,
                              ::example::OperaResF* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void FloatCalService_Stub::Div(::google::protobuf::RpcController* controller,
                              const ::example::OperaReqF* request,
                              ::example::OperaResF* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace example
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
