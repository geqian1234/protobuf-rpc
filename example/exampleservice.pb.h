// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example/exampleservice.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_example_2fexampleservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_example_2fexampleservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_example_2fexampleservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_example_2fexampleservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_example_2fexampleservice_2eproto;
namespace example {
class HelloReqMessage;
struct HelloReqMessageDefaultTypeInternal;
extern HelloReqMessageDefaultTypeInternal _HelloReqMessage_default_instance_;
class HelloResMessage;
struct HelloResMessageDefaultTypeInternal;
extern HelloResMessageDefaultTypeInternal _HelloResMessage_default_instance_;
class OperaReq;
struct OperaReqDefaultTypeInternal;
extern OperaReqDefaultTypeInternal _OperaReq_default_instance_;
class OperaReqF;
struct OperaReqFDefaultTypeInternal;
extern OperaReqFDefaultTypeInternal _OperaReqF_default_instance_;
class OperaRes;
struct OperaResDefaultTypeInternal;
extern OperaResDefaultTypeInternal _OperaRes_default_instance_;
class OperaResF;
struct OperaResFDefaultTypeInternal;
extern OperaResFDefaultTypeInternal _OperaResF_default_instance_;
}  // namespace example
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace example {

// ===================================================================


// -------------------------------------------------------------------

class OperaResF final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.OperaResF) */ {
 public:
  inline OperaResF() : OperaResF(nullptr) {}
  ~OperaResF() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR OperaResF(::google::protobuf::internal::ConstantInitialized);

  OperaResF(const OperaResF& from);
  OperaResF(OperaResF&& from) noexcept
    : OperaResF() {
    *this = ::std::move(from);
  }

  inline OperaResF& operator=(const OperaResF& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperaResF& operator=(OperaResF&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OperaResF& default_instance() {
    return *internal_default_instance();
  }
  static inline const OperaResF* internal_default_instance() {
    return reinterpret_cast<const OperaResF*>(
               &_OperaResF_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(OperaResF& a, OperaResF& b) {
    a.Swap(&b);
  }
  inline void Swap(OperaResF* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperaResF* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OperaResF* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OperaResF>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OperaResF& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const OperaResF& from) {
    OperaResF::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OperaResF* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "example.OperaResF";
  }
  protected:
  explicit OperaResF(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCFieldNumber = 1,
  };
  // float c = 1;
  void clear_c() ;
  float c() const;
  void set_c(float value);

  private:
  float _internal_c() const;
  void _internal_set_c(float value);

  public:
  // @@protoc_insertion_point(class_scope:example.OperaResF)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float c_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_example_2fexampleservice_2eproto;
};// -------------------------------------------------------------------

class OperaRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.OperaRes) */ {
 public:
  inline OperaRes() : OperaRes(nullptr) {}
  ~OperaRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR OperaRes(::google::protobuf::internal::ConstantInitialized);

  OperaRes(const OperaRes& from);
  OperaRes(OperaRes&& from) noexcept
    : OperaRes() {
    *this = ::std::move(from);
  }

  inline OperaRes& operator=(const OperaRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperaRes& operator=(OperaRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OperaRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const OperaRes* internal_default_instance() {
    return reinterpret_cast<const OperaRes*>(
               &_OperaRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(OperaRes& a, OperaRes& b) {
    a.Swap(&b);
  }
  inline void Swap(OperaRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperaRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OperaRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OperaRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OperaRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const OperaRes& from) {
    OperaRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OperaRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "example.OperaRes";
  }
  protected:
  explicit OperaRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCFieldNumber = 1,
  };
  // int64 c = 1;
  void clear_c() ;
  ::int64_t c() const;
  void set_c(::int64_t value);

  private:
  ::int64_t _internal_c() const;
  void _internal_set_c(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:example.OperaRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t c_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_example_2fexampleservice_2eproto;
};// -------------------------------------------------------------------

class OperaReqF final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.OperaReqF) */ {
 public:
  inline OperaReqF() : OperaReqF(nullptr) {}
  ~OperaReqF() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR OperaReqF(::google::protobuf::internal::ConstantInitialized);

  OperaReqF(const OperaReqF& from);
  OperaReqF(OperaReqF&& from) noexcept
    : OperaReqF() {
    *this = ::std::move(from);
  }

  inline OperaReqF& operator=(const OperaReqF& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperaReqF& operator=(OperaReqF&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OperaReqF& default_instance() {
    return *internal_default_instance();
  }
  static inline const OperaReqF* internal_default_instance() {
    return reinterpret_cast<const OperaReqF*>(
               &_OperaReqF_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(OperaReqF& a, OperaReqF& b) {
    a.Swap(&b);
  }
  inline void Swap(OperaReqF* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperaReqF* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OperaReqF* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OperaReqF>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OperaReqF& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const OperaReqF& from) {
    OperaReqF::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OperaReqF* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "example.OperaReqF";
  }
  protected:
  explicit OperaReqF(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
  };
  // float a = 1;
  void clear_a() ;
  float a() const;
  void set_a(float value);

  private:
  float _internal_a() const;
  void _internal_set_a(float value);

  public:
  // float b = 2;
  void clear_b() ;
  float b() const;
  void set_b(float value);

  private:
  float _internal_b() const;
  void _internal_set_b(float value);

  public:
  // @@protoc_insertion_point(class_scope:example.OperaReqF)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float a_;
    float b_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_example_2fexampleservice_2eproto;
};// -------------------------------------------------------------------

class OperaReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.OperaReq) */ {
 public:
  inline OperaReq() : OperaReq(nullptr) {}
  ~OperaReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR OperaReq(::google::protobuf::internal::ConstantInitialized);

  OperaReq(const OperaReq& from);
  OperaReq(OperaReq&& from) noexcept
    : OperaReq() {
    *this = ::std::move(from);
  }

  inline OperaReq& operator=(const OperaReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperaReq& operator=(OperaReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OperaReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const OperaReq* internal_default_instance() {
    return reinterpret_cast<const OperaReq*>(
               &_OperaReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(OperaReq& a, OperaReq& b) {
    a.Swap(&b);
  }
  inline void Swap(OperaReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperaReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OperaReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OperaReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OperaReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const OperaReq& from) {
    OperaReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OperaReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "example.OperaReq";
  }
  protected:
  explicit OperaReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
  };
  // int64 a = 1;
  void clear_a() ;
  ::int64_t a() const;
  void set_a(::int64_t value);

  private:
  ::int64_t _internal_a() const;
  void _internal_set_a(::int64_t value);

  public:
  // int64 b = 2;
  void clear_b() ;
  ::int64_t b() const;
  void set_b(::int64_t value);

  private:
  ::int64_t _internal_b() const;
  void _internal_set_b(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:example.OperaReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t a_;
    ::int64_t b_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_example_2fexampleservice_2eproto;
};// -------------------------------------------------------------------

class HelloResMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.HelloResMessage) */ {
 public:
  inline HelloResMessage() : HelloResMessage(nullptr) {}
  ~HelloResMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HelloResMessage(::google::protobuf::internal::ConstantInitialized);

  HelloResMessage(const HelloResMessage& from);
  HelloResMessage(HelloResMessage&& from) noexcept
    : HelloResMessage() {
    *this = ::std::move(from);
  }

  inline HelloResMessage& operator=(const HelloResMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloResMessage& operator=(HelloResMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HelloResMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const HelloResMessage* internal_default_instance() {
    return reinterpret_cast<const HelloResMessage*>(
               &_HelloResMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(HelloResMessage& a, HelloResMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(HelloResMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HelloResMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HelloResMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HelloResMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HelloResMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HelloResMessage& from) {
    HelloResMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HelloResMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "example.HelloResMessage";
  }
  protected:
  explicit HelloResMessage(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
  };
  // bytes Response = 1;
  void clear_response() ;
  const std::string& response() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_response(Arg_&& arg, Args_... args);
  std::string* mutable_response();
  PROTOBUF_NODISCARD std::string* release_response();
  void set_allocated_response(std::string* ptr);

  private:
  const std::string& _internal_response() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_response(
      const std::string& value);
  std::string* _internal_mutable_response();

  public:
  // @@protoc_insertion_point(class_scope:example.HelloResMessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr response_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_example_2fexampleservice_2eproto;
};// -------------------------------------------------------------------

class HelloReqMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.HelloReqMessage) */ {
 public:
  inline HelloReqMessage() : HelloReqMessage(nullptr) {}
  ~HelloReqMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HelloReqMessage(::google::protobuf::internal::ConstantInitialized);

  HelloReqMessage(const HelloReqMessage& from);
  HelloReqMessage(HelloReqMessage&& from) noexcept
    : HelloReqMessage() {
    *this = ::std::move(from);
  }

  inline HelloReqMessage& operator=(const HelloReqMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloReqMessage& operator=(HelloReqMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HelloReqMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const HelloReqMessage* internal_default_instance() {
    return reinterpret_cast<const HelloReqMessage*>(
               &_HelloReqMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(HelloReqMessage& a, HelloReqMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(HelloReqMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HelloReqMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HelloReqMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HelloReqMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HelloReqMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HelloReqMessage& from) {
    HelloReqMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HelloReqMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "example.HelloReqMessage";
  }
  protected:
  explicit HelloReqMessage(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientNameFieldNumber = 1,
  };
  // bytes ClientName = 1;
  void clear_clientname() ;
  const std::string& clientname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_clientname(Arg_&& arg, Args_... args);
  std::string* mutable_clientname();
  PROTOBUF_NODISCARD std::string* release_clientname();
  void set_allocated_clientname(std::string* ptr);

  private:
  const std::string& _internal_clientname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_clientname(
      const std::string& value);
  std::string* _internal_mutable_clientname();

  public:
  // @@protoc_insertion_point(class_scope:example.HelloReqMessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr clientname_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_example_2fexampleservice_2eproto;
};

// ===================================================================


// -------------------------------------------------------------------

class HelloService_Stub;
class HelloService : public ::google::protobuf::Service {
 protected:
  HelloService() = default;

 public:
  using Stub = HelloService_Stub;

  HelloService(const HelloService&) = delete;
  HelloService& operator=(const HelloService&) = delete;
  virtual ~HelloService() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Hello(::google::protobuf::RpcController* controller,
                        const ::example::HelloReqMessage* request,
                        ::example::HelloResMessage* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class HelloService_Stub final : public HelloService {
 public:
  HelloService_Stub(::google::protobuf::RpcChannel* channel);
  HelloService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  HelloService_Stub(const HelloService_Stub&) = delete;
  HelloService_Stub& operator=(const HelloService_Stub&) = delete;

  ~HelloService_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements HelloService ------------------------------------------
  void Hello(::google::protobuf::RpcController* controller,
                        const ::example::HelloReqMessage* request,
                        ::example::HelloResMessage* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// -------------------------------------------------------------------

class IntCalService_Stub;
class IntCalService : public ::google::protobuf::Service {
 protected:
  IntCalService() = default;

 public:
  using Stub = IntCalService_Stub;

  IntCalService(const IntCalService&) = delete;
  IntCalService& operator=(const IntCalService&) = delete;
  virtual ~IntCalService() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Add(::google::protobuf::RpcController* controller,
                        const ::example::OperaReq* request,
                        ::example::OperaRes* response,
                        ::google::protobuf::Closure* done);
  virtual void Sub(::google::protobuf::RpcController* controller,
                        const ::example::OperaReq* request,
                        ::example::OperaRes* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class IntCalService_Stub final : public IntCalService {
 public:
  IntCalService_Stub(::google::protobuf::RpcChannel* channel);
  IntCalService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  IntCalService_Stub(const IntCalService_Stub&) = delete;
  IntCalService_Stub& operator=(const IntCalService_Stub&) = delete;

  ~IntCalService_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements IntCalService ------------------------------------------
  void Add(::google::protobuf::RpcController* controller,
                        const ::example::OperaReq* request,
                        ::example::OperaRes* response,
                        ::google::protobuf::Closure* done) override;
  void Sub(::google::protobuf::RpcController* controller,
                        const ::example::OperaReq* request,
                        ::example::OperaRes* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// -------------------------------------------------------------------

class FloatCalService_Stub;
class FloatCalService : public ::google::protobuf::Service {
 protected:
  FloatCalService() = default;

 public:
  using Stub = FloatCalService_Stub;

  FloatCalService(const FloatCalService&) = delete;
  FloatCalService& operator=(const FloatCalService&) = delete;
  virtual ~FloatCalService() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Mul(::google::protobuf::RpcController* controller,
                        const ::example::OperaReqF* request,
                        ::example::OperaResF* response,
                        ::google::protobuf::Closure* done);
  virtual void Div(::google::protobuf::RpcController* controller,
                        const ::example::OperaReqF* request,
                        ::example::OperaResF* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class FloatCalService_Stub final : public FloatCalService {
 public:
  FloatCalService_Stub(::google::protobuf::RpcChannel* channel);
  FloatCalService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  FloatCalService_Stub(const FloatCalService_Stub&) = delete;
  FloatCalService_Stub& operator=(const FloatCalService_Stub&) = delete;

  ~FloatCalService_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements FloatCalService ------------------------------------------
  void Mul(::google::protobuf::RpcController* controller,
                        const ::example::OperaReqF* request,
                        ::example::OperaResF* response,
                        ::google::protobuf::Closure* done) override;
  void Div(::google::protobuf::RpcController* controller,
                        const ::example::OperaReqF* request,
                        ::example::OperaResF* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// HelloReqMessage

// bytes ClientName = 1;
inline void HelloReqMessage::clear_clientname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.clientname_.ClearToEmpty();
}
inline const std::string& HelloReqMessage::clientname() const {
  // @@protoc_insertion_point(field_get:example.HelloReqMessage.ClientName)
  return _internal_clientname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HelloReqMessage::set_clientname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.clientname_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:example.HelloReqMessage.ClientName)
}
inline std::string* HelloReqMessage::mutable_clientname() {
  std::string* _s = _internal_mutable_clientname();
  // @@protoc_insertion_point(field_mutable:example.HelloReqMessage.ClientName)
  return _s;
}
inline const std::string& HelloReqMessage::_internal_clientname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.clientname_.Get();
}
inline void HelloReqMessage::_internal_set_clientname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.clientname_.Set(value, GetArenaForAllocation());
}
inline std::string* HelloReqMessage::_internal_mutable_clientname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.clientname_.Mutable( GetArenaForAllocation());
}
inline std::string* HelloReqMessage::release_clientname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:example.HelloReqMessage.ClientName)
  return _impl_.clientname_.Release();
}
inline void HelloReqMessage::set_allocated_clientname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.clientname_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.clientname_.IsDefault()) {
          _impl_.clientname_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:example.HelloReqMessage.ClientName)
}

// -------------------------------------------------------------------

// HelloResMessage

// bytes Response = 1;
inline void HelloResMessage::clear_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.response_.ClearToEmpty();
}
inline const std::string& HelloResMessage::response() const {
  // @@protoc_insertion_point(field_get:example.HelloResMessage.Response)
  return _internal_response();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HelloResMessage::set_response(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.response_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:example.HelloResMessage.Response)
}
inline std::string* HelloResMessage::mutable_response() {
  std::string* _s = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:example.HelloResMessage.Response)
  return _s;
}
inline const std::string& HelloResMessage::_internal_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.response_.Get();
}
inline void HelloResMessage::_internal_set_response(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.response_.Set(value, GetArenaForAllocation());
}
inline std::string* HelloResMessage::_internal_mutable_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.response_.Mutable( GetArenaForAllocation());
}
inline std::string* HelloResMessage::release_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:example.HelloResMessage.Response)
  return _impl_.response_.Release();
}
inline void HelloResMessage::set_allocated_response(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.response_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.response_.IsDefault()) {
          _impl_.response_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:example.HelloResMessage.Response)
}

// -------------------------------------------------------------------

// OperaReq

// int64 a = 1;
inline void OperaReq::clear_a() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.a_ = ::int64_t{0};
}
inline ::int64_t OperaReq::a() const {
  // @@protoc_insertion_point(field_get:example.OperaReq.a)
  return _internal_a();
}
inline void OperaReq::set_a(::int64_t value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:example.OperaReq.a)
}
inline ::int64_t OperaReq::_internal_a() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_;
}
inline void OperaReq::_internal_set_a(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.a_ = value;
}

// int64 b = 2;
inline void OperaReq::clear_b() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.b_ = ::int64_t{0};
}
inline ::int64_t OperaReq::b() const {
  // @@protoc_insertion_point(field_get:example.OperaReq.b)
  return _internal_b();
}
inline void OperaReq::set_b(::int64_t value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:example.OperaReq.b)
}
inline ::int64_t OperaReq::_internal_b() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b_;
}
inline void OperaReq::_internal_set_b(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.b_ = value;
}

// -------------------------------------------------------------------

// OperaRes

// int64 c = 1;
inline void OperaRes::clear_c() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.c_ = ::int64_t{0};
}
inline ::int64_t OperaRes::c() const {
  // @@protoc_insertion_point(field_get:example.OperaRes.c)
  return _internal_c();
}
inline void OperaRes::set_c(::int64_t value) {
  _internal_set_c(value);
  // @@protoc_insertion_point(field_set:example.OperaRes.c)
}
inline ::int64_t OperaRes::_internal_c() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.c_;
}
inline void OperaRes::_internal_set_c(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.c_ = value;
}

// -------------------------------------------------------------------

// OperaReqF

// float a = 1;
inline void OperaReqF::clear_a() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.a_ = 0;
}
inline float OperaReqF::a() const {
  // @@protoc_insertion_point(field_get:example.OperaReqF.a)
  return _internal_a();
}
inline void OperaReqF::set_a(float value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:example.OperaReqF.a)
}
inline float OperaReqF::_internal_a() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_;
}
inline void OperaReqF::_internal_set_a(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.a_ = value;
}

// float b = 2;
inline void OperaReqF::clear_b() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.b_ = 0;
}
inline float OperaReqF::b() const {
  // @@protoc_insertion_point(field_get:example.OperaReqF.b)
  return _internal_b();
}
inline void OperaReqF::set_b(float value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:example.OperaReqF.b)
}
inline float OperaReqF::_internal_b() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b_;
}
inline void OperaReqF::_internal_set_b(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.b_ = value;
}

// -------------------------------------------------------------------

// OperaResF

// float c = 1;
inline void OperaResF::clear_c() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.c_ = 0;
}
inline float OperaResF::c() const {
  // @@protoc_insertion_point(field_get:example.OperaResF.c)
  return _internal_c();
}
inline void OperaResF::set_c(float value) {
  _internal_set_c(value);
  // @@protoc_insertion_point(field_set:example.OperaResF.c)
}
inline float OperaResF::_internal_c() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.c_;
}
inline void OperaResF::_internal_set_c(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.c_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace example


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_example_2fexampleservice_2eproto_2epb_2eh
